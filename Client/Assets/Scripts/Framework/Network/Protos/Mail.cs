// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Mail.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProtobufNet {

  /// <summary>Holder for reflection information generated from Mail.proto</summary>
  public static partial class MailReflection {

    #region Descriptor
    /// <summary>File descriptor for Mail.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MailReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpNYWlsLnByb3RvEgxQcm90b2J1Zl9OZXQaDENvbW1vbi5wcm90byJyCgRN",
            "YWlsEg4KBm1haWxJRBgBIAEoBBIQCghzZW5kVGltZRgCIAEoDRIOCgZzZW5k",
            "ZXIYAyABKAwSDwoHY29udGVudBgEIAEoDBInCgthdHRhY2htZW50cxgFIAMo",
            "CzISLlByb3RvYnVmX05ldC5JdGVtIjEKCkNTUmVhZE1haWwSDgoGbWFpbElE",
            "GAEgASgEEhMKC21haWxDb250ZW50GAIgASgJIjEKClNDUmVhZE1haWwSDgoG",
            "bWFpbElEGAEgASgEEhMKC21haWxDb250ZW50GAIgASgJKh8KC01haWxFcnJD",
            "b2RlEhAKDEhhc0NvbGxlY3RlZBAAKigKDkVNYWlsUmVhZFN0YXRlEgoKBlVu",
            "UmVhZBAAEgoKBlJlYWRlZBABKjYKFEVNYWlsQXR0YWNobWVudFN0YXRlEg8K",
            "C1VuQ29sbGVjdGVkEAASDQoJQ29sbGVjdGVkEAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ProtobufNet.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ProtobufNet.MailErrCode), typeof(global::ProtobufNet.EMailReadState), typeof(global::ProtobufNet.EMailAttachmentState), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtobufNet.Mail), global::ProtobufNet.Mail.Parser, new[]{ "MailID", "SendTime", "Sender", "Content", "Attachments" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtobufNet.CSReadMail), global::ProtobufNet.CSReadMail.Parser, new[]{ "MailID", "MailContent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtobufNet.SCReadMail), global::ProtobufNet.SCReadMail.Parser, new[]{ "MailID", "MailContent" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MailErrCode {
    [pbr::OriginalName("HasCollected")] HasCollected = 0,
  }

  public enum EMailReadState {
    /// <summary>
    /// 第一个枚举值必须是0
    /// </summary>
    [pbr::OriginalName("UnRead")] UnRead = 0,
    [pbr::OriginalName("Readed")] Readed = 1,
  }

  public enum EMailAttachmentState {
    [pbr::OriginalName("UnCollected")] UnCollected = 0,
    [pbr::OriginalName("Collected")] Collected = 1,
  }

  #endregion

  #region Messages
  public sealed partial class Mail : pb::IMessage<Mail> {
    private static readonly pb::MessageParser<Mail> _parser = new pb::MessageParser<Mail>(() => new Mail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Mail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtobufNet.MailReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mail(Mail other) : this() {
      mailID_ = other.mailID_;
      sendTime_ = other.sendTime_;
      sender_ = other.sender_;
      content_ = other.content_;
      attachments_ = other.attachments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mail Clone() {
      return new Mail(this);
    }

    /// <summary>Field number for the "mailID" field.</summary>
    public const int MailIDFieldNumber = 1;
    private ulong mailID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MailID {
      get { return mailID_; }
      set {
        mailID_ = value;
      }
    }

    /// <summary>Field number for the "sendTime" field.</summary>
    public const int SendTimeFieldNumber = 2;
    private uint sendTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SendTime {
      get { return sendTime_; }
      set {
        sendTime_ = value;
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 3;
    private pb::ByteString sender_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Sender {
      get { return sender_; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 4;
    private pb::ByteString content_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attachments" field.</summary>
    public const int AttachmentsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::ProtobufNet.Item> _repeated_attachments_codec
        = pb::FieldCodec.ForMessage(42, global::ProtobufNet.Item.Parser);
    private readonly pbc::RepeatedField<global::ProtobufNet.Item> attachments_ = new pbc::RepeatedField<global::ProtobufNet.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtobufNet.Item> Attachments {
      get { return attachments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Mail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Mail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MailID != other.MailID) return false;
      if (SendTime != other.SendTime) return false;
      if (Sender != other.Sender) return false;
      if (Content != other.Content) return false;
      if(!attachments_.Equals(other.attachments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MailID != 0UL) hash ^= MailID.GetHashCode();
      if (SendTime != 0) hash ^= SendTime.GetHashCode();
      if (Sender.Length != 0) hash ^= Sender.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      hash ^= attachments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MailID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(MailID);
      }
      if (SendTime != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SendTime);
      }
      if (Sender.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Sender);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Content);
      }
      attachments_.WriteTo(output, _repeated_attachments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MailID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MailID);
      }
      if (SendTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SendTime);
      }
      if (Sender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Sender);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      size += attachments_.CalculateSize(_repeated_attachments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Mail other) {
      if (other == null) {
        return;
      }
      if (other.MailID != 0UL) {
        MailID = other.MailID;
      }
      if (other.SendTime != 0) {
        SendTime = other.SendTime;
      }
      if (other.Sender.Length != 0) {
        Sender = other.Sender;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      attachments_.Add(other.attachments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MailID = input.ReadUInt64();
            break;
          }
          case 16: {
            SendTime = input.ReadUInt32();
            break;
          }
          case 26: {
            Sender = input.ReadBytes();
            break;
          }
          case 34: {
            Content = input.ReadBytes();
            break;
          }
          case 42: {
            attachments_.AddEntriesFrom(input, _repeated_attachments_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CSReadMail : pb::IMessage<CSReadMail> {
    private static readonly pb::MessageParser<CSReadMail> _parser = new pb::MessageParser<CSReadMail>(() => new CSReadMail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSReadMail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtobufNet.MailReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSReadMail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSReadMail(CSReadMail other) : this() {
      mailID_ = other.mailID_;
      mailContent_ = other.mailContent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSReadMail Clone() {
      return new CSReadMail(this);
    }

    /// <summary>Field number for the "mailID" field.</summary>
    public const int MailIDFieldNumber = 1;
    private ulong mailID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MailID {
      get { return mailID_; }
      set {
        mailID_ = value;
      }
    }

    /// <summary>Field number for the "mailContent" field.</summary>
    public const int MailContentFieldNumber = 2;
    private string mailContent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MailContent {
      get { return mailContent_; }
      set {
        mailContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSReadMail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSReadMail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MailID != other.MailID) return false;
      if (MailContent != other.MailContent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MailID != 0UL) hash ^= MailID.GetHashCode();
      if (MailContent.Length != 0) hash ^= MailContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MailID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(MailID);
      }
      if (MailContent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MailContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MailID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MailID);
      }
      if (MailContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MailContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSReadMail other) {
      if (other == null) {
        return;
      }
      if (other.MailID != 0UL) {
        MailID = other.MailID;
      }
      if (other.MailContent.Length != 0) {
        MailContent = other.MailContent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MailID = input.ReadUInt64();
            break;
          }
          case 18: {
            MailContent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SCReadMail : pb::IMessage<SCReadMail> {
    private static readonly pb::MessageParser<SCReadMail> _parser = new pb::MessageParser<SCReadMail>(() => new SCReadMail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCReadMail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtobufNet.MailReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCReadMail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCReadMail(SCReadMail other) : this() {
      mailID_ = other.mailID_;
      mailContent_ = other.mailContent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCReadMail Clone() {
      return new SCReadMail(this);
    }

    /// <summary>Field number for the "mailID" field.</summary>
    public const int MailIDFieldNumber = 1;
    private ulong mailID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MailID {
      get { return mailID_; }
      set {
        mailID_ = value;
      }
    }

    /// <summary>Field number for the "mailContent" field.</summary>
    public const int MailContentFieldNumber = 2;
    private string mailContent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MailContent {
      get { return mailContent_; }
      set {
        mailContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCReadMail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCReadMail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MailID != other.MailID) return false;
      if (MailContent != other.MailContent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MailID != 0UL) hash ^= MailID.GetHashCode();
      if (MailContent.Length != 0) hash ^= MailContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MailID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(MailID);
      }
      if (MailContent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MailContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MailID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MailID);
      }
      if (MailContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MailContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCReadMail other) {
      if (other == null) {
        return;
      }
      if (other.MailID != 0UL) {
        MailID = other.MailID;
      }
      if (other.MailContent.Length != 0) {
        MailContent = other.MailContent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MailID = input.ReadUInt64();
            break;
          }
          case 18: {
            MailContent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
